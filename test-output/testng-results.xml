<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="3" failed="1" total="6" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="165565" started-at="2022-06-18T14:04:20Z" finished-at="2022-06-18T14:07:06Z">
    <groups>
      <group name="haroan">
        <method signature="MobilePurchase.method1()[pri:1, instance:com.flipkart.stepdefination.MobilePurchase@3b81a1bc]" name="method1" class="com.flipkart.stepdefination.MobilePurchase"/>
        <method signature="MobilePurchase.method2(java.lang.String)[pri:2, instance:com.flipkart.stepdefination.MobilePurchase@3b81a1bc]" name="method2" class="com.flipkart.stepdefination.MobilePurchase"/>
        <method signature="MobilePurchase.method3()[pri:3, instance:com.flipkart.stepdefination.MobilePurchase@3b81a1bc]" name="method3" class="com.flipkart.stepdefination.MobilePurchase"/>
        <method signature="TvPurchase2.method1()[pri:1, instance:com.flipkart.stepdefination.TvPurchase2@5f2050f6]" name="method1" class="com.flipkart.stepdefination.TvPurchase2"/>
        <method signature="TvPurchase2.method2(java.lang.String)[pri:2, instance:com.flipkart.stepdefination.TvPurchase2@5f2050f6]" name="method2" class="com.flipkart.stepdefination.TvPurchase2"/>
        <method signature="TvPurchase2.method3()[pri:3, instance:com.flipkart.stepdefination.TvPurchase2@5f2050f6]" name="method3" class="com.flipkart.stepdefination.TvPurchase2"/>
      </group> <!-- haroan -->
    </groups>
    <test name="Test" duration-ms="165565" started-at="2022-06-18T14:04:20Z" finished-at="2022-06-18T14:07:06Z">
      <class name="com.flipkart.stepdefination.MobilePurchase">
        <test-method status="FAIL" signature="launch()[pri:0, instance:com.flipkart.stepdefination.MobilePurchase@3b81a1bc]" name="launch" is-config="true" duration-ms="0" started-at="2022-06-18T19:36:59Z" finished-at="2022-06-18T19:36:59Z">
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: MicrosoftEdge=102.0.1245.41)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'HAROAN', ip: '192.168.1.12', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_321'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [312b21fdef971df6809b51643d25148d, maximizeCurrentWindow {}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 102.0.1245.41, javascriptEnabled: true, ms:edgeOptions: {debuggerAddress: localhost:56623}, msedge: {msedgedriverVersion: 102.0.1245.44 (72efbf98e0b4..., userDataDir: C:\Users\haroa\AppData\Loca...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:56623/devtoo..., se:cdpVersion: 102.0.1245.41, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 312b21fdef971df6809b51643d25148d]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: MicrosoftEdge=102.0.1245.41)
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'HAROAN', ip: '192.168.1.12', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_321'
Driver info: org.openqa.selenium.edge.EdgeDriver
Command: [312b21fdef971df6809b51643d25148d, maximizeCurrentWindow {}]
Capabilities {acceptInsecureCerts: false, browserName: msedge, browserVersion: 102.0.1245.41, javascriptEnabled: true, ms:edgeOptions: {debuggerAddress: localhost:56623}, msedge: {msedgedriverVersion: 102.0.1245.44 (72efbf98e0b4..., userDataDir: C:\Users\haroa\AppData\Loca...}, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:56623/devtoo..., se:cdpVersion: 102.0.1245.41, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 312b21fdef971df6809b51643d25148d
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:567)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:622)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:626)
	at org.openqa.selenium.remote.RemoteWebDriver$RemoteWebDriverOptions$RemoteWindow.maximize(RemoteWebDriver.java:993)
	at com.flipkart.stepdefination.MobilePurchase.launch(MobilePurchase.java:43)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch -->
        <test-method status="SKIP" signature="method1()[pri:1, instance:com.flipkart.stepdefination.MobilePurchase@3b81a1bc]" name="method1" duration-ms="1" started-at="2022-06-18T19:37:06Z" finished-at="2022-06-18T19:37:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method1 -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:com.flipkart.stepdefination.MobilePurchase@3b81a1bc]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2022-06-18T19:37:06Z" finished-at="2022-06-18T19:37:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:com.flipkart.stepdefination.MobilePurchase@3b81a1bc]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-06-18T19:37:06Z" finished-at="2022-06-18T19:37:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:com.flipkart.stepdefination.MobilePurchase@3b81a1bc]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2022-06-18T19:37:06Z" finished-at="2022-06-18T19:37:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="method2(java.lang.String)[pri:2, instance:com.flipkart.stepdefination.MobilePurchase@3b81a1bc]" name="method2" duration-ms="0" started-at="2022-06-18T19:37:06Z" data-provider="mobile" finished-at="2022-06-18T19:37:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[SAMSUNG MOBILE]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method2 -->
        <test-method status="SKIP" signature="beforeMethod()[pri:0, instance:com.flipkart.stepdefination.MobilePurchase@3b81a1bc]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2022-06-18T19:37:06Z" finished-at="2022-06-18T19:37:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="SKIP" signature="method3()[pri:3, instance:com.flipkart.stepdefination.MobilePurchase@3b81a1bc]" name="method3" duration-ms="1" started-at="2022-06-18T19:37:06Z" finished-at="2022-06-18T19:37:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method3 -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:com.flipkart.stepdefination.MobilePurchase@3b81a1bc]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-06-18T19:37:06Z" finished-at="2022-06-18T19:37:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="quit()[pri:0, instance:com.flipkart.stepdefination.MobilePurchase@3b81a1bc]" name="quit" is-config="true" duration-ms="0" started-at="2022-06-18T19:37:06Z" finished-at="2022-06-18T19:37:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method status="SKIP" signature="afterMethod()[pri:0, instance:com.flipkart.stepdefination.MobilePurchase@3b81a1bc]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-06-18T19:37:06Z" finished-at="2022-06-18T19:37:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.flipkart.stepdefination.MobilePurchase -->
      <class name="com.flipkart.stepdefination.TvPurchase2">
        <test-method status="PASS" signature="launch(java.lang.String)[pri:0, instance:com.flipkart.stepdefination.TvPurchase2@5f2050f6]" name="launch" is-config="true" duration-ms="37593" started-at="2022-06-18T19:34:20Z" finished-at="2022-06-18T19:34:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.flipkart.com/]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launch -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.flipkart.stepdefination.TvPurchase2@5f2050f6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2022-06-18T19:34:58Z" finished-at="2022-06-18T19:34:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="method1()[pri:1, instance:com.flipkart.stepdefination.TvPurchase2@5f2050f6]" name="method1" duration-ms="136" started-at="2022-06-18T19:34:58Z" finished-at="2022-06-18T19:34:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method1 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.flipkart.stepdefination.TvPurchase2@5f2050f6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2022-06-18T19:34:58Z" finished-at="2022-06-18T19:34:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.flipkart.stepdefination.TvPurchase2@5f2050f6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2022-06-18T19:34:58Z" finished-at="2022-06-18T19:34:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="method2(java.lang.String)[pri:2, instance:com.flipkart.stepdefination.TvPurchase2@5f2050f6]" name="method2" duration-ms="1092" started-at="2022-06-18T19:34:58Z" data-provider="tv" finished-at="2022-06-18T19:34:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[SAMSUNG TV]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method2 -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.flipkart.stepdefination.TvPurchase2@5f2050f6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2022-06-18T19:34:59Z" finished-at="2022-06-18T19:34:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="method3()[pri:3, instance:com.flipkart.stepdefination.TvPurchase2@5f2050f6]" name="method3" duration-ms="118493" started-at="2022-06-18T19:34:59Z" finished-at="2022-06-18T19:36:58Z">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to find element with locator By.xpath: //span[contains(@class,'B_NuCI')]
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'HAROAN', ip: '192.168.1.12', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_321'
Driver info: driver.version: RemoteWebDriver]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to find element with locator By.xpath: //span[contains(@class,'B_NuCI')]
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.1.4', revision: '535d840ee2'
System info: host: 'HAROAN', ip: '192.168.1.12', os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_321'
Driver info: driver.version: RemoteWebDriver
	at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
	at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:385)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:377)
	at com.flipkart.stepdefination.TvPurchase2.method3(TvPurchase2.java:94)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:822)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1130)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:113)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:206)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:177)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- method3 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.flipkart.stepdefination.TvPurchase2@5f2050f6]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2022-06-18T19:34:59Z" finished-at="2022-06-18T19:34:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.flipkart.stepdefination.TvPurchase2@5f2050f6]" name="afterMethod" is-config="true" duration-ms="1" started-at="2022-06-18T19:36:58Z" finished-at="2022-06-18T19:36:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="quit()[pri:0, instance:com.flipkart.stepdefination.TvPurchase2@5f2050f6]" name="quit" is-config="true" duration-ms="1071" started-at="2022-06-18T19:36:58Z" finished-at="2022-06-18T19:36:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
      </class> <!-- com.flipkart.stepdefination.TvPurchase2 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
